import "core-js/stable";
import "regenerator-runtime/runtime";
import { waitForAppScreen, zemu, nano_models, resolveTxFromData, signTransaction } from './test.fixture';

const contractAddr = "0x9a065e500cdcd01c0a506b0eb1a8b060b0ce1379";

// https://polygonscan.com/tx/0x9cb1cc2381cc0c5762feee6a5b9500035c24078966f8be533126953d0d1099a9
nano_models.forEach(function (model) {
  test('[Nano ' + model.letter + '] Add TokensGlenn processInputOrders', zemu(model, async (sim, eth) => {
    const data = "0x90e1aa690000000000000000000000000000000000000000000000000000000000000261000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000049bf59523465300000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000205a65726f457800000000000000000000000000000000000000000000000000000000000000000000000000005817d4f0b62a59b17f75207da1848c2ce75e7af400000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000680000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c70000000000000000000000005817d4f0b62a59b17f75207da1848c2ce75e7af4000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000005e8415565b0000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c70000000000000000000000005817d4f0b62a59b17f75207da1848c2ce75e7af400000000000000000000000000000000000000000000000000049028e301a45700000000000000000000000000000000000000000000000001b9876b475e022500000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c70000000000000000000000005817d4f0b62a59b17f75207da1848c2ce75e7af4000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000049028e301a457000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000025472616465724a6f650000000000000000000000000000000000000000000000000000000000000000049028e301a45700000000000000000000000000000000000000000000000001b9876b475e0225000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000060ae616a2155ee3d9a68541ba4544862310933d400000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000002000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c70000000000000000000000005817d4f0b62a59b17f75207da1848c2ce75e7af4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000869584cd00000000000000000000000010000000000000000000000000000000000000110000000000000000000000000000000000000000000000b9f845d45762544f5e00000000000000000000000000000000000000000000000000000000000000000000000000000001";
    const [resolution, serializedTx] = await resolveTxFromData(data, contractAddr);
    const tx = signTransaction(serializedTx, resolution, eth.signTransaction)
    const right_clicks = model.letter === 'S' ? 8 : 6;

    // Wait for the application to actually load and parse the transaction
    await waitForAppScreen(sim);
    await sim.navigateAndCompareSnapshots('.', model.name + '_add_tokensglenn_processInputOrders', [right_clicks, 0]);
    await tx;
  }));
});