import { nano_models, processTest, populateTransaction } from "../test.fixture";

const contractName = "NestedFactory";
const contractAddr = "0xfd896db057f260adce7fd1fd48c6623e023406cd";
const testNetwork = "polygon";

const testLabel = "v2 synchronize"; // <= Name of the test (wording changed with v2 to "Update Portfolio")
const testDirSuffix = testLabel.toLowerCase().replace(/\s+/g, '_');

// // https://polygonscan.com/tx/0xbb4a6ce909f3d093d04bfbde590cc3fe54b804e4e11738e1937ee7b56d532ff1
const inputData = "";

const models = [
	{
		name: 'nanox',
		steps: 5
	},
]

// populate unsignedTx from genericTx and get network chain id
const unsignedTx = populateTransaction(contractAddr, inputData, testNetwork);
// Process tests for each nano models
models.forEach((model) => {
	const nano_model = nano_models.find((nano_model) => nano_model.name === model.name)
	processTest(nano_model, model.steps, contractName, testLabel, testDirSuffix, unsignedTx, testNetwork)
})